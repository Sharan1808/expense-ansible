      - name: Disable NodeJS default version
        ansible.builtin.shell: dnf module disable nodejs -y
      - name: Enable NodeJS 18 Version
        ansible.builtin.shell: dnf module enable nodejs:18 -y
      - name: Install NodeJS
        ansible.builtin.dnf:
          name: nodejs
          state: present
      - name: Copy Backend Service File
        ansible.builtin.copy:
          src: backend.service
          dest: /etc/systemd/system/backend.service
      - name: Add Application User
        ansible.builtin.user:
          name: expense
      - name: Delete Old App Directory
        ansible.builtin.file:
          path: /app
          state: absent
      - name: Create App Directory
        ansible.builtin.file:
          path: /app
          state: directory
      - name: Download and Extract App Content
        ansible.builtin.unarchive:
          src: https://expense-artifacts.s3.amazonaws.com/backend.zip
          dest: /app
          remote_src: yes
      - name: Download NodeJS dependencies
        ansible.builtin.shell: npm install
        args:
          chdir: /app
      - name: Install MySQL Client
        ansible.builtin.dnf:
          name: mysql
          state: present
      - name: Load Schema
        ansible.builtin.shell: mysql -h mysql.spdevops18.online -uroot -p{{MYSQL_ROOT_PASSWORD}} < /app/schema/backend.sql
      - name: Backend Service
        ansible.builtin.systemd:
          name: backend
          state: restarted
          enabled: yes
          daemon-reload: yes